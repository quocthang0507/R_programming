swirl()
swirl
library(swirl)
swirl()
exit()
exit
q()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$landmass, summary)
tapply(flags$population, flags$landmass, summary)
TRUE && c(TRUE, FALSE, FALSE)
ok()
TRUE && c(TRUE, FALSE, FALSE)
ok()
ok()
ok()
q()
x = 1
y <- -1
print(x)
y
str <- 'Xin chÃ o'
msg <- "CTK44"
print(str)
msg
msg # message
daySo <- 1:10
daySo
daySo <- 1:20
daySo
daySo <- 1:30
daySo
daySo <- 1:30
daySo
vec <- vector()
vec
1
x <- 1
x
class(x)
y <- 1L
class(y)
1/0
0/0
1/NaN
Inf / Inf
1/Inf
x <- 1
attributes(x)
x <- 1:10
attributes(x)
df <- data.frame()
attributes(df)
attributes(data.frame())
x <- c(0.5, 0.6)
x <- c(TRUE, FALSE)
x <- c(F, T)
x <- c("a", "b", "c")
x <- 1:10
x <- c(1+0i, 2+4i)
vec1 <- vector("numeric", length = 10)
vec1
vec2 <- vector("logical", length = 10)
vec2
vec2
y <- c(1, "a")
y
y <- c(TRUE, 1)
y
y <- c("a", TRUE)
y
x <- 0:9
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x <- c('a', 'b', 'c')
as.numeric(x)
as.logical(x)
as.complex(x)
maTran <- matrix(nrow = 2, ncol = 3)
maTran
dim(m)
dim(maTran)
attributes(maTran)
maTran <- matrix(1:6, nrow = 2, ncol = 3)
maTran
maTran <- 1:6
maTran
dim(maTran) <- c(2, 3)
maTran
x <- 1:5
y <- 6:10
cbind(x, y)
rbind(x, y)
x <- list(1, "a", TRUE, 1 + 4i)
x
x <- vector("list", length = 5)
x
x <- list(1, "a", TRUE, 1 + 4i)
x[1]
x[[1]]
x$1
x <- 1:6
x
x[1]
x[[1]]
x[[[1]]]
x[1][1]
x[[2]]
x[2]
maTran
maTran[1]
maTran[[1]]
maTran[[4]]
maTran[1,]
x <- factor(c("yes", "yes", "no", "yes", "no"))
x
table(x)
unclass(x)
x <- c(1, 2, NA, 4, 5)
is.na(x)
is.nan(x)
x <- c(1, 2, NA, 4, 5, NaN)
is.na(x)
is.nan(x)
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
nrow(x)
ncol(x)
x <- 1:5
names(x)
names(x) <- c('A', 'B', 'C', 'D', 'E')
x
names(x)
x$A
x <- list("A" = 1, B = 2, C = 3)
x$A
x
x <- list("Los Angeles" = 1, Boston = 2, London = 3)
x
x <- list("A" = 1, B = 2, C = 3)
names(x)
m <- matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a", "b"), c("c", "d"))
m
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x, y)
x <- 1:4
y <- 2:3
x+y
x <- c(3,5,1,10,12,6)
x[x<6]==0
x[x %in% 1:5] <- 0
x
source("D:/GitRepos/R_programming/src/Assignment1/code.R")
pollutantmean("specdata", "sulfate", 1:10)
# Calculates the mean of a pollutant (sulfate or nitrate)
# across a specified list of monitors
pollutantmean <- function(directory, pollutant, id = 1:332) {
vec <- c()
for (i in id) {
filename <- paste(sprintf("%03d", i), ".csv", sep = "")
filepath <- file.path(getwd(), directory, filename)
df <- read.csv(filepath)
vec <- c(vec, df[[pollutant]])
}
mean(vec, na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
source("D:/GitRepos/R_programming/src/Assignment1/code.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("D:/GitRepos/R_programming/src/Assignment1/code.R")
setwd("D:/GitRepos/R_programming/src/Assignment1/")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
library(datasets)
data(iris)
?iris
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars_dt <- as.data.table(mtcars)
mtcars_dt <- data.table(mtcars)
library(data.table)
iris_dt <- as.data.table(iris)
install.packages("data.table")
library(data.table)
iris_dt <- as.data.table(iris)
iris_dt[Species == "virginica",round(mean(Sepal.Length)) ]
tcars_dt <- as.data.table(mtcars)
mtcars_dt <- mtcars_dt[,  .(mean_cols = mean(hp)), by = cyl]
mtcars_dt <- as.data.table(mtcars)
mtcars_dt <- mtcars_dt[,  .(mean_cols = mean(hp)), by = cyl]
round(abs(mtcars_dt[cyl == 4, mean_cols] - mtcars_dt[cyl == 8, mean_cols]))
